name: checkmodulemd
namespace: dist
desc: download modulemd and run validity checks upon it
maintainer: merlinm

input:
    args:
        - dist_git_commit

environment:
    rpm:
        - python2-aexpect
        - python2-avocado
        - python2-modulemd
        - python2-enchant

actions:
    - name: split the given commit identifier into useful pieces
      python:
        file: split_string.py
        callable: run
        string: ${dist_git_commit}
      export: c

    - name: download the modulemd file
      distgit:
        package: ${c.name}
        gitref: ${c.gitref}
        # This will always be modules/ ...
        namespace: ${c.namespace}
        baseurl: https://src.fedoraproject.org
        path:
          - ${c.name}.yaml
        localpath:
          - download/${c.name}.yaml

    - name: run avocado modulemd validity test
      shell:
      - ignorereturn:
        - [
            avocado, run, check_modulemd.py,
            --job-results-dir, "${workdir}",
            --mux-inject,
            'run:modulemd:${workdir}/download/${c.name}.yaml',
            'run:jargonfile:examples-testdata/jargon.txt',
        ]

    - name: process avocado run output, for resultsdb
      python:
          file: process_avocado_results.py
          callable: run
          item: ${dist_git_commit}
          item_type: dist_git_commit
          checkname: modulemd
          workdir: ${workdir}
          artifactsdir: ${artifactsdir}
      export: output

    - name: report results to resultsdb
      resultsdb:
          results: ${output}
